name: Playwright Tests
on:
  #   push:
  #     branches: [ main, master ]
  #   pull_request:
  #     branches: [ main, master ]
  workflow_dispatch:

env:
  emacsVersion: 27.1 # min specified in Emacs lisp package
  nodeVersion: 19
  pnpmVersion: 8
  reportRetentionDays: 14

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Setup Emacs
        uses: jcs090218/setup-emacs@master
        with:
          version: ${{ env.emacsVersion }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.pnpmVersion }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build extension for testing
        run: pnpm run build

      - name: Run Playwright tests
        run: xvfb-run pnpm run test:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob e2e report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [playwright-tests]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.pnpmVersion }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: ${{ env.reportRetentionDays }}
