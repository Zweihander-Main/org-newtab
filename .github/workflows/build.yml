name: 'Build extension'
on:
  workflow_call:
    inputs:
      browser:
        required: false
        type: string
        description: 'The browser to build the extension for'
        default: 'all'

env:
  nodeVersion: 19
  pnpmVersion: 8
  retentionDays: 14
  emacsVersion: 27.1 # min specified in emacs file

jobs:
  build-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.pnpmVersion }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the extension for chrome
        if: ${{ inputs.browser == 'all' || inputs.browser == 'chrome' }}
        run: pnpm run build

      - name: Package the extension for chrome
        if: ${{ inputs.browser == 'all' || inputs.browser == 'chrome' }}
        run: pnpm run package

      - name: Add Chrome extension to artifacts
        if: ${{ inputs.browser == 'all' || inputs.browser == 'chrome' }}
        uses: actions/upload-artifact@v4
        with:
          name: chrome-mv3-prod.zip
          path: build/chrome-mv3-prod.zip
          retention-days: ${{ env.retentionDays }}

      - name: Build the extension for firefox
        if: ${{ inputs.browser == 'all' || inputs.browser == 'firefox' }}
        run: pnpm run build --target=firefox-mv3

      - name: Package the extension for firefox
        if: ${{ inputs.browser == 'all' || inputs.browser == 'firefox' }}
        run: pnpm run package --target=firefox-mv3

      - name: Add Firefox extension to artifacts
        if: ${{ inputs.browser == 'all' || inputs.browser == 'firefox' }}
        uses: actions/upload-artifact@v4
        with:
          name: firefox-mv3-prod.zip
          path: build/firefox-mv3-prod.zip
          retention-days: ${{ env.retentionDays }}

      - name: Set up Emacs
        if: ${{ inputs.browser == 'all' || inputs.browser == 'emacs' }}
        uses: jcs090218/setup-emacs@master
        with:
          version: ${{ env.emacsVersion }}

      - name: Install Eldev
        if: ${{ inputs.browser == 'all' || inputs.browser == 'emacs' }}
        uses: emacs-eldev/setup-eldev@v1

      - name: Build the emacs plugin
        if: ${{ inputs.browser == 'all' || inputs.browser == 'emacs' }}
        id: eldev_build
        run: |
          PATH=`eldev package --print-filename | sed -n 'x;$p'`
          echo "::set-output name=path::${PATH}"

      - name: Get basename
        if: ${{ inputs.browser == 'all' || inputs.browser == 'emacs' }}
        id: get_basename
        run: |
          BASENAME=`basename ${{ steps.eldev_build.outputs.path }}`
          echo "::set-output name=basename::${BASENAME}"

      - name: Add Emacs plugin to artifacts
        if: ${{ inputs.browser == 'all' || inputs.browser == 'emacs' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_basename.outputs.basename }}
          path: dist/${{ steps.get_basename.outputs.basename }}
          retention-days: ${{ env.retentionDays }}
